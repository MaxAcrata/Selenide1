# Название пайплайна (отображается в GitHub Actions)
name: Java CI with Gradle

# Триггеры запуска пайплайна:
on:
  push:
    branches: [ "main" ]         # Запускать при пуше в ветку main
  pull_request:
    branches: [ "main" ]         # И при открытии PR в main

jobs:
  build:
    # Операционная система, на которой будет выполняться сборка
    runs-on: ubuntu-latest

    steps:
      # Шаг 1: Скачиваем исходный код репозитория на runner
      - name: Checkout code
        uses: actions/checkout@v4

      # Шаг 2: Устанавливаем JDK 11 для работы с Java
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'  # Используем OpenJDK от Eclipse Temurin

      # Шаг 3: Делаем gradlew исполняемым файлом (для Unix-систем)
      - name: Grant execute permission for Gradle wrapper
        run: chmod +x gradlew

      # Шаг 4: Собираем проект без запуска тестов
      - name: Build without tests
        run: ./gradlew build -x test

      # Шаг 5: Запускаем локальный сервер в фоне (например, ваше веб-приложение)
      - name: Start local server (background)
        run: |
          java -jar ./artifacts/app-order.jar &   # '&' — запуск в фоне
          sleep 10                                # ждём 10 секунд, чтобы сервер успел стартовать

      # Шаг 6: Запускаем автотесты (предполагается, что они подключены к локальному серверу)
      - name: Run tests
        run: ./gradlew test

      # Шаг 7: Если тесты упали — загружаем отчет о тестах как артефакт
      - name: Upload test report if tests fail
        if: failure()                             # Выполняется только если предыдущий шаг не удался
        uses: actions/upload-artifact@v4
        with:
          name: test-report                      # Имя артефакта
          path: build/reports/tests/test         # Путь к отчету об ошибках
